{"ast":null,"code":"import * as actions from \"../actions/actionTypes\";\nlet lastId = 0;\n\nfunction bugReducer(state = [], action) {\n  switch (action.type) {\n    case actions.BUG_ADDED:\n      return [...state, {\n        id: ++lastId,\n        description: action.payload.description,\n        resolved: false\n      }];\n\n    case actions.BUG_RESOLVED:\n      return state.map(bug => bug.id !== action.payload.id ? bug : { ...bug,\n        resolved: !bug.resolved\n      });\n\n    case actions.BUG_REMOVED:\n      return state.filter(bug => bug.id !== action.payload.id);\n\n    default:\n      return state;\n  }\n}\n\nexport default bugReducer;","map":{"version":3,"sources":["F:/Documenten/Anke/WincAcademy/A-van-Beek-Winc-opdrachten/140_dentist_react-master/src/reducers/bugReducer.js"],"names":["actions","lastId","bugReducer","state","action","type","BUG_ADDED","id","description","payload","resolved","BUG_RESOLVED","map","bug","BUG_REMOVED","filter"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,wBAAzB;AAEA,IAAIC,MAAM,GAAG,CAAb;;AAEA,SAASC,UAAT,CAAoBC,KAAK,GAAG,EAA5B,EAAgCC,MAAhC,EAAwC;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,OAAO,CAACM,SAAb;AACE,aAAO,CACL,GAAGH,KADE,EAEL;AACEI,QAAAA,EAAE,EAAE,EAAEN,MADR;AAEEO,QAAAA,WAAW,EAAEJ,MAAM,CAACK,OAAP,CAAeD,WAF9B;AAGEE,QAAAA,QAAQ,EAAE;AAHZ,OAFK,CAAP;;AAQF,SAAKV,OAAO,CAACW,YAAb;AACE,aAAOR,KAAK,CAACS,GAAN,CAAWC,GAAD,IACfA,GAAG,CAACN,EAAJ,KAAWH,MAAM,CAACK,OAAP,CAAeF,EAA1B,GAA+BM,GAA/B,GAAqC,EAAE,GAAGA,GAAL;AAAUH,QAAAA,QAAQ,EAAE,CAACG,GAAG,CAACH;AAAzB,OADhC,CAAP;;AAGF,SAAKV,OAAO,CAACc,WAAb;AACE,aAAOX,KAAK,CAACY,MAAN,CAAcF,GAAD,IAASA,GAAG,CAACN,EAAJ,KAAWH,MAAM,CAACK,OAAP,CAAeF,EAAhD,CAAP;;AACF;AACE,aAAOJ,KAAP;AAjBJ;AAmBD;;AAED,eAAeD,UAAf","sourcesContent":["import * as actions from \"../actions/actionTypes\";\r\n\r\nlet lastId = 0;\r\n\r\nfunction bugReducer(state = [], action) {\r\n  switch (action.type) {\r\n    case actions.BUG_ADDED:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: ++lastId,\r\n          description: action.payload.description,\r\n          resolved: false,\r\n        },\r\n      ];\r\n    case actions.BUG_RESOLVED:\r\n      return state.map((bug) =>\r\n        bug.id !== action.payload.id ? bug : { ...bug, resolved: !bug.resolved }\r\n      );\r\n    case actions.BUG_REMOVED:\r\n      return state.filter((bug) => bug.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default bugReducer;\r\n"]},"metadata":{},"sourceType":"module"}